{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/cooperurich/Documents/GitHub/BudgetManagerPro/mobile/bottomTab/addExpense.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { Checkbox } from \"react-native-paper\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nexport default function AddExpense(_ref) {\n  var submitHandler = _ref.submitHandler;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      expenseName = _useState2[0],\n      setExpenseName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      price = _useState4[0],\n      setPrice = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      checked = _useState6[0],\n      setChecked = _useState6[1];\n\n  var _useState7 = useState(new Date(1598051730000)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      date = _useState8[0],\n      setDate = _useState8[1];\n\n  var _useState9 = useState(\"date\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mode = _useState10[0],\n      setMode = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      show = _useState12[0],\n      setShow = _useState12[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  };\n\n  var showMode = function showMode(currentMode) {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  var showDatepicker = function showDatepicker() {\n    showMode(\"date\");\n  };\n\n  var showTimepicker = function showTimepicker() {\n    showMode(\"time\");\n  };\n\n  var changeHandler = function changeHandler(val) {\n    setExpenseName(val);\n    setPrice(val);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(DropDownPicker, {\n    items: [{\n      label: \"Rent\",\n      value: \"rent\"\n    }, {\n      label: \"Utilites\",\n      value: \"utilites\"\n    }, {\n      label: \"Subscriptions\",\n      value: \"subscriptions\"\n    }, {\n      label: \"Gas\",\n      value: \"gas\"\n    }, {\n      label: \"Groceries\",\n      value: \"groceries\"\n    }, {\n      label: \"Student Loans\",\n      value: \"groceries\"\n    }, {\n      label: \"Insurance\",\n      value: \"insurance\"\n    }, {\n      label: \"Car\",\n      value: \"car\"\n    }],\n    placeholder: \"Expense Category\",\n    containerStyle: {\n      height: 40\n    },\n    style: {\n      color: \"#68A047\"\n    },\n    dropDownStyle: {\n      backgroundColor: \"#fafafa\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: style.input,\n    placeholder: \"New Expense..\",\n    onChangeText: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    keyboardType: \"numeric\",\n    style: style.input,\n    placeholder: \"$Price\",\n    onChangeText: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Checkbox.Item, {\n    label: \"Has this Been Paid Already?\",\n    labelStyle: \"#68A047\",\n    status: checked ? \"checked\" : \"unchecked\",\n    color: \"#68A047\",\n    onPress: function onPress() {\n      setChecked(!checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: style.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: style.time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Select the Date The Expense is Due\")), React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: date,\n    mode: mode,\n    is24Hour: true,\n    display: \"default\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(DropDownPicker, {\n    items: [{\n      label: \"One Time Expense\",\n      value: \"oneTime\"\n    }, {\n      label: \"Weekly\",\n      value: \"weekly\"\n    }, {\n      label: \"BiWeekly\",\n      value: \"biweekly\"\n    }, {\n      label: \"Monthly\",\n      value: \"monthly\"\n    }, {\n      label: \"Annual\",\n      value: \"annual\"\n    }],\n    placeholder: \"Billing Cycle\",\n    containerStyle: {\n      height: 40\n    },\n    style: {\n      color: \"#68A047\"\n    },\n    dropDownStyle: {\n      backgroundColor: \"#fafafa\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      submitHandler(expenseName);\n    },\n    title: \"add to budget\",\n    color: \"#68A047\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n}\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: 30\n  },\n  wrapper: {\n    padding: 10\n  },\n  input: {\n    height: 40,\n    marginBottom: 10,\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderBottomColor: 1,\n    color: \"#68A047\",\n    borderBottomColor: \"white\"\n  },\n  time: {\n    height: 40,\n    fontSize: 20,\n    marginBottom: 10,\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderBottomColor: 1,\n    alignContent: \"center\",\n    color: \"#68A047\",\n    borderBottomColor: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/cooperurich/Documents/GitHub/BudgetManagerPro/mobile/bottomTab/addExpense.js"],"names":["React","useState","DropDownPicker","Checkbox","DateTimePicker","AddExpense","submitHandler","expenseName","setExpenseName","price","setPrice","checked","setChecked","Date","date","setDate","mode","setMode","show","setShow","onChange","event","selectedDate","currentDate","Platform","OS","showMode","currentMode","showDatepicker","showTimepicker","changeHandler","val","label","value","height","color","backgroundColor","style","input","container","time","StyleSheet","create","flex","justifyContent","alignItems","paddingTop","wrapper","padding","marginBottom","paddingHorizontal","paddingVertical","borderBottomColor","fontSize","alignContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, Text, View, TextInput, Button, Alert } from \"react-native\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport { Checkbox } from \"react-native-paper\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\nexport default function AddExpense({ submitHandler }) {\n  const [expenseName, setExpenseName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n  const [date, setDate] = useState(new Date(1598051730000));\n  const [mode, setMode] = useState(\"date\");\n  const [show, setShow] = useState(false);\n\n  const onChange = (event, selectedDate) => {\n    const currentDate = selectedDate || date;\n    setShow(Platform.OS === \"ios\");\n    setDate(currentDate);\n  };\n\n  const showMode = currentMode => {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  const showDatepicker = () => {\n    showMode(\"date\");\n  };\n\n  const showTimepicker = () => {\n    showMode(\"time\");\n  };\n\n  const changeHandler = val => {\n    setExpenseName(val);\n    setPrice(val);\n  };\n\n  return (\n    <View>\n      <DropDownPicker\n        items={[\n          { label: \"Rent\", value: \"rent\" },\n          { label: \"Utilites\", value: \"utilites\" },\n          { label: \"Subscriptions\", value: \"subscriptions\" },\n          { label: \"Gas\", value: \"gas\" },\n          { label: \"Groceries\", value: \"groceries\" },\n          { label: \"Student Loans\", value: \"groceries\" },\n          { label: \"Insurance\", value: \"insurance\" },\n          { label: \"Car\", value: \"car\" }\n        ]}\n        placeholder=\"Expense Category\"\n        containerStyle={{ height: 40 }}\n        style={{ color: \"#68A047\" }}\n        dropDownStyle={{ backgroundColor: \"#fafafa\" }}\n      />\n      <TextInput\n        style={style.input}\n        placeholder=\"New Expense..\"\n        onChangeText={changeHandler}\n      />\n      <TextInput\n        keyboardType=\"numeric\"\n        style={style.input}\n        placeholder=\"$Price\"\n        onChangeText={changeHandler}\n      />\n\n      <Checkbox.Item\n        label=\"Has this Been Paid Already?\"\n        labelStyle=\"#68A047\"\n        status={checked ? \"checked\" : \"unchecked\"}\n        color=\"#68A047\"\n        onPress={() => {\n          setChecked(!checked);\n        }}\n      />\n      <View style={style.container}>\n        <Text style={style.time}>Select the Date The Expense is Due</Text>\n      </View>\n      <DateTimePicker\n        testID=\"dateTimePicker\"\n        value={date}\n        mode={mode}\n        is24Hour={true}\n        display=\"default\"\n        onChange={onChange}\n      />\n      <DropDownPicker\n        items={[\n          { label: \"One Time Expense\", value: \"oneTime\" },\n          { label: \"Weekly\", value: \"weekly\" },\n          { label: \"BiWeekly\", value: \"biweekly\" },\n          { label: \"Monthly\", value: \"monthly\" },\n          { label: \"Annual\", value: \"annual\" }\n        ]}\n        placeholder=\"Billing Cycle\"\n        containerStyle={{ height: 40 }}\n        style={{ color: \"#68A047\" }}\n        dropDownStyle={{ backgroundColor: \"#fafafa\" }}\n      />\n\n      <Button\n        onPress={() => {\n          submitHandler(expenseName);\n        }}\n        title=\"add to budget\"\n        color=\"#68A047\"\n      />\n    </View>\n  );\n}\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: 30\n  },\n  wrapper: {\n    padding: 10\n  },\n  input: {\n    height: 40,\n    marginBottom: 10,\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderBottomColor: 1,\n    color: \"#68A047\",\n    borderBottomColor: \"white\"\n  },\n  time: {\n    height: 40,\n    fontSize: 20,\n    marginBottom: 10,\n    paddingHorizontal: 8,\n    paddingVertical: 6,\n    borderBottomColor: 1,\n    alignContent: \"center\",\n    color: \"#68A047\",\n    borderBottomColor: \"white\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}